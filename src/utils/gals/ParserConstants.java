package utils.gals;

public interface ParserConstants
{
    int START_SYMBOL = 43;

    int FIRST_NON_TERMINAL    = 43;
    int FIRST_SEMANTIC_ACTION = 84;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  1, -1, -1, -1, -1, -1, -1,  1, -1, -1,  1, -1, -1, -1, -1,  1,  1,  1,  1, -1, -1,  1,  1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  5, -1, -1, -1, -1, -1, -1,  4, -1, -1,  5, -1, -1, -1, -1,  4,  5,  4,  4, -1, -1,  5,  5, -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, -1,  9, -1, -1, -1, -1,  8,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, 11, -1, 11, 11, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, 19, -1, 19, 20, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, 15, -1, -1, -1, -1, -1, -1, -1, 17, -1, 16, -1, -1, -1, -1, -1, -1, 18, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 48, 48, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, 48, -1, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, 48, -1, -1, -1 },
        { -1, 29, 29, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, 29, -1, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1 },
        { -1, 30, 30, 30, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, 30, -1, 30, 30, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1 },
        { -1, 32, -1, -1, 32, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 36, -1, -1, 35, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 38, 38, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1, -1, 38, -1, -1, -1, -1, -1, 38, -1, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, -1, -1 },
        { -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, -1, 42, -1, -1, -1, -1, 42, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 49, -1, -1, -1, -1, 50, -1, -1, -1, -1, 49, -1, -1, -1, -1, -1, 49, -1, -1, -1, 51, 49, 49, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 49, 49, 49 },
        { -1, 52, 52, 52, 52, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, -1, -1, -1, 55, -1, -1, -1, -1, -1, 53, -1, 52, 52, -1, -1, -1, -1, -1, -1, -1, -1, 52, -1, -1, -1 },
        { -1, 56, 56, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, 56, -1, -1, -1 },
        { -1, 57, -1, -1, -1, -1, 57, -1, -1, -1, -1, 57, -1, -1, -1, -1, -1, 57, -1, -1, -1, 57, 57, 57, -1, -1, -1, -1, -1, -1, -1, -1, 58, 58, 58, 58, -1, -1, -1, 57, 57, 57 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 59, 60, 61, 62, -1, -1, -1, -1, -1, -1 },
        { -1, 63, 63, 63, 63, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, 63, -1, -1, -1, -1, -1, -1, -1, -1, 63, -1, -1, -1 },
        { -1, 64, -1, -1, -1, -1, 64, -1, -1, -1, -1, 64, -1, -1, -1, -1, -1, 64, -1, -1, -1, 64, 64, 64, -1, -1, -1, -1, 65, 66, -1, -1, 64, 64, 64, 64, -1, -1, -1, 64, 64, 64 },
        { -1, 67, 67, 67, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 67, 67, -1, -1, -1, -1, -1, -1, -1, -1, 67, -1, -1, -1 },
        { -1, 68, -1, -1, -1, -1, 68, -1, -1, -1, -1, 68, -1, -1, -1, -1, -1, 68, -1, -1, -1, 68, 68, 68, -1, -1, -1, -1, 68, 68, 69, 70, 68, 68, 68, 68, -1, -1, -1, 68, 68, 68 },
        { -1, 71, 72, 73, 74, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, 75, -1, -1, -1 },
        { -1, 78, -1, -1, -1, -1, 78, -1, -1, 79, -1, 78, 81, -1, -1, -1, -1, 78, -1, -1, -1, 78, 78, 78, 80, -1, -1, -1, 78, 78, 78, 78, 78, 78, 78, 78, -1, -1, -1, 78, 78, 78 },
        { -1,  3, -1, -1, -1, -1, -1, -1,  3, -1, -1,  3, -1, -1,  2, -1,  3,  3,  3,  3, -1, -1,  3,  3, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 23, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 24, -1, -1, -1, -1, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, 28, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 13, 14 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 33, -1, 34 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 39, -1, 40 },
        { -1, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, 43, 43, -1, -1, 44, -1, -1, -1, -1, 44, 44, -1, -1, -1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        {  8, 44, 15 },
        { 45, 41, 75 },
        {  0 },
        { 44 },
        { 47 },
        { 46 },
        { 78 },
        { 48 },
        { 49 },
        { 50 },
        { 51 },
        { 52, 53 },
        {  2, 80 },
        {  0 },
        { 42, 53 },
        {  9 },
        { 19 },
        { 17 },
        { 26 },
        { 54 },
        { 55 },
        { 20, 39, 54, 42,  3, 40 },
        { 37, 56 },
        { 38, 56 },
        {  6, 39, 57, 42, 58, 40 },
        { 11, 39, 58, 40 },
        {  2, 79 },
        { 77 },
        { 76 },
        { 56 },
        { 56 },
        { 24, 39, 59, 40 },
        { 60,  2, 81 },
        {  0 },
        { 42, 59 },
        {  5, 42 },
        {  0 },
        { 23, 39, 61, 40 },
        { 56, 82 },
        {  0 },
        { 42, 61 },
        { 18, 56, 62, 63, 15 },
        { 46, 41, 83 },
        {  0 },
        { 62 },
        { 14, 62 },
        {  0 },
        { 12, 62, 28, 56 },
        { 65, 64 },
        {  0 },
        {  7, 65, 64 },
        { 22, 65, 64 },
        { 66 },
        { 27 },
        { 16 },
        { 21, 65 },
        { 69, 67 },
        {  0 },
        { 68, 69 },
        { 33 },
        { 34 },
        { 35 },
        { 36 },
        { 71, 70 },
        {  0 },
        { 29, 71, 70 },
        { 30, 71, 70 },
        { 73, 72 },
        {  0 },
        { 31, 73, 72 },
        { 32, 73, 72 },
        {  2, 74 },
        {  3 },
        {  4 },
        {  5 },
        { 39, 56, 40 },
        { 29, 73 },
        { 30, 73 },
        {  0 },
        { 10 },
        { 25 },
        { 13, 39, 56, 40 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "esperado EOF",
        "esperado identificador",
        "esperado constante_int",
        "esperado constante_float",
        "esperado constante_string",
        "esperado add",
        "esperado and",
        "esperado begin",
        "esperado bool",
        "esperado count",
        "esperado delete",
        "esperado do",
        "esperado elementof",
        "esperado else",
        "esperado end",
        "esperado false",
        "esperado float",
        "esperado if",
        "esperado int",
        "esperado list",
        "esperado not",
        "esperado or",
        "esperado print",
        "esperado read",
        "esperado size",
        "esperado string",
        "esperado true",
        "esperado until",
        "esperado +",
        "esperado -",
        "esperado *",
        "esperado /",
        "esperado ==",
        "esperado ~=",
        "esperado <",
        "esperado >",
        "esperado =",
        "esperado <-",
        "esperado (",
        "esperado )",
        "esperado ;",
        "esperado ,",
        "esperado begin", // <programa> inválido
        "esperado identificador tipo if do print read", // <lista_instrucoes> inválido
        "esperado identificador tipo do print if read", // <instrucao> inválido
        "esperado identificador do if print read", // <comando> inválido
        "esperado tipo", // <dec_variavel> inválido
        "esperado read", // <comando_entrada_dados> inválido
        "esperado print", // <comando_saida_dados> inválido
        "esperado if", // <comando_selecao> inválido
        "esperado do", // <comando_repeticao> inválido
        "esperado tipo", // <tipo> inválido
        "esperado identificador", // <lista_id> inválido
        "esperado tipo primitivo", // <tipo_simples> inválido
        "esperado tipo", // <lista_tipo> inválido
        "esperado identificador constante_int constante_float constante_string false not true + - (", // <expressao> inválido
        "esperado identificador constante_int constante_float constante_string false not true + -(", // <elemento> inválido
        "esperado identificador constante_int constante_float constante_string false not true + - (", // <posicao> inválido
        "esperado identificador constante_string", // <lista_entrada> inválido
        "esperado identificador constante_string", // <string_read> inválido
        "esperado identificador constante_int constante_float constante_string false not true + - (", // <lista_expressoes> inválido
        "esperado identificador do if print read", // <lista_comandos> inválido
        "esperado else end", // <else> inválido
        "esperado identificador and do if or print read ) ; ,", // <expressao_> inválido
        "esperado identificador constante_int constante_float constante_string false list true + - (", // <valor> inválido
        "esperado identificador constante_int constante_float constante_string + - (", // <relacional> inválido
        "esperado identificador and do if or print read == ~= < > ) ; ,", // <relacional_> inválido
        "esperado == ~= < >", // <operador_relacional> inválido
        "esperado identificador constante_int constante_float constante_string + - (", // <aritmetica> inválido
        "esperado identificador and do if or print read + - == ~= < > ) ; ,", // <aritmetica_> inválido
        "esperado identificador constante_int constante_float constante_string + - (", // <termo> inválido
        "esperado identificador and do if or print read + - * / == ~= < > ) ; ,", // <termo_> inválido
        "esperado identificador constante_int constante_float constante_string + - (", // <fator> inválido
        "esperado identificador and count do elementof if or print read size + - * / == ~= < > ) ; ,", // <fator_> inválido
        "esperado identificador tipo do end if print read", // <lista_instrucoes_> inválido
        "esperado = <-", // <comando_atribuicao_> inválido
        "esperado add delete", // <comando_manipulacao_lista_> inválido
        "esperado identificador", // <comando_intermediario_atr_mani> inválido
        "esperado add delete = <-", // <comando_intermediario_atr_mani_> inválido
        "esperado ; ,", // <lista_id_> inválido
        "esperado ) ,", // <lista_entrada_> inválido
        "esperado ) ,", // <lista_expressoes_> inválido
        "esperado identificador do else end if print read until" // <lista_comandos_> inválido
    };
}
