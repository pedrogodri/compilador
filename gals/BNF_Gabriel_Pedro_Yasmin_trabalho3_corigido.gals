#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
mai: [A-Z]
min : [a-z]
dig: [0-9]
dez_milhar: [1-9] {dig}? {dig}? {dig}?  {dig}?
dez_milhar_invert: {dig}? {dig}? {dig}? {dig}? [1-9]

bloco: "{" [^\{\}]* "}"
linha: "\\" (.)* "\\"

#Tokens
identificador: ({min} | {mai} {min})+ (_{dig}+)?
cint: 0 | {dez_milhar}
cfloat: (0 | {dez_milhar})"."({dez_milhar_invert} | 0)
cstring: \"[^\n\""\"]*\"

pr_add = identificador: "add"
pr_and = identificador: "and"
pr_begin = identificador: "begin"
pr_bool = identificador: "bool"
pr_count = identificador: "count"
pr_delete = identificador: "delete"
pr_do = identificador: "do"
pr_elementof = identificador: "elementOf"
pr_else = identificador: "else"
pr_end = identificador: "end"
pr_false = identificador: "false"
pr_float = identificador: "float"
pr_if = identificador: "if"
pr_int = identificador: "int"
pr_list = identificador: "list"
pr_not = identificador: "not"
pr_or = identificador: "or"
pr_print = identificador: "print"
pr_read = identificador: "read"
pr_size = identificador: "size"
pr_string = identificador: "string"
pr_true = identificador: "true"
pr_until = identificador: "until"


"+" 
"-" 
"*" 
"/" 
"==" 
"~=" 
"<" 
">" 
"=" 
"<-" 
"(" 
")" 
";"
","


:[\s\t\n]

:!{bloco}
:!{linha}
#NonTerminals
<programa>
<lista_instrucoes>
<instrucao>
<comando>


<dec_variavel>
<comando_entrada_dados>
<comando_saida_dados>
<comando_selecao>
<comando_repeticao>

<tipo>
<lista_id>
<tipo_simples>
<lista_tipo>

<expressao>
<elemento>
<posicao>

<lista_entrada>
<string_read>

<lista_expressoes>

<lista_comandos>
<else>

<expressao_>
<valor>
<relacional>
<relacional_>
<operador_relacional>
<aritmetica>
<aritmetica_>
<termo>
<termo_>
<fator>
<fator_>

<lista_instrucoes_>
<comando_atribuicao_>
<comando_manipulacao_lista_>
<comando_intermediario_atr_mani>
<comando_intermediario_atr_mani_>
<lista_id_>
<lista_entrada_>
<lista_expressoes_>
<lista_comandos_>
#Grammar
<programa> ::= pr_begin <lista_instrucoes> pr_end ;
<lista_instrucoes> ::= <instrucao> ";" <lista_instrucoes_> ;
<lista_instrucoes_> ::= î | <lista_instrucoes> ;
<instrucao> ::= <dec_variavel> | <comando> ;
<comando> ::= <comando_intermediario_atr_mani> | <comando_entrada_dados> | <comando_saida_dados> | <comando_selecao> | <comando_repeticao> ;


<dec_variavel> ::= <tipo> <lista_id> ;
<lista_id>::= identificador <lista_id_> ;
<lista_id_>::= î | "," <lista_id> ;
<tipo_simples> ::= pr_bool | pr_int | pr_float | pr_string ;
<tipo> ::= <tipo_simples> | <lista_tipo> ;
<lista_tipo> ::= pr_list "(" <tipo_simples> "," cint ")" ;

<comando_atribuicao_> ::= "=" <expressao> | "<-" <expressao> ;

<comando_manipulacao_lista_> ::= pr_add "(" <elemento> "," <posicao> ")" | pr_delete "(" <posicao> ")" ;

<comando_intermediario_atr_mani> ::= identificador <comando_intermediario_atr_mani_> ;
<comando_intermediario_atr_mani_> ::= <comando_manipulacao_lista_> | <comando_atribuicao_> ;

<elemento> ::= <expressao> ;
<posicao> ::= <expressao> ;

<comando_entrada_dados> ::= pr_read "(" <lista_entrada> ")" ;
<lista_entrada> ::= <string_read> identificador <lista_entrada_> ;
<lista_entrada_> ::= î | "," <lista_entrada> ;
<string_read> ::= cstring "," | î ;

<comando_saida_dados> ::= pr_print "(" <lista_expressoes> ")" ;
<lista_expressoes> ::= <expressao> <lista_expressoes_> ;
<lista_expressoes_> ::= î | "," <lista_expressoes> ;


<comando_selecao> ::= pr_if <expressao> <lista_comandos> <else> pr_end ;
<lista_comandos> ::= <comando> ";" <lista_comandos_> ;
<lista_comandos_> ::= î | <lista_comandos> ;
<else> ::= pr_else <lista_comandos> | î ;

<comando_repeticao> ::= pr_do <lista_comandos> pr_until <expressao> ;




<expressao> ::= <valor> <expressao_> ; 
<expressao_> ::= î | pr_and <valor> <expressao_> | pr_or <valor> <expressao_> ; 
<valor> ::= <relacional> | pr_true | pr_false | pr_not <valor> ; 
<relacional> ::= <aritmetica> <relacional_> ; 
<relacional_> ::= î | <operador_relacional> <aritmetica> ; 
<operador_relacional>::= "==" | "~=" | "<" | ">" ; 
<aritmetica> ::= <termo> <aritmetica_> ; 
<aritmetica_> ::= î | "+" <termo> <aritmetica_> | "-" <termo> <aritmetica_> ; 
<termo> ::= <fator> <termo_> ; 
<termo_> ::= î | "*" <fator> <termo_> | "/" <fator> <termo_> ; 
<fator> ::= identificador <fator_> | 
 cint | 
 cfloat | 
 cstring | 
 "(" <expressao> ")" | 
 "+" <fator> | 
 "-" <fator> ; 
<fator_> ::= î | pr_count | pr_size | pr_elementof "(" <expressao> ")" ;

